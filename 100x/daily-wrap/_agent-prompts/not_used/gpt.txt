# 100x Daily Wrap – LLM Agent Prompt (AGENT.MD) **v3.0 – 2025‑07‑10**

> **Mission**  Generate a fully‑populated daily HTML report (`100x-daily-wrap-YYYYMMDD.html`) from the combination of **(a)** one or more *RAW source* files (`*.json` preferred, occasionally `*.html`) and **(b)** the master template `100x-daily-wrap-template.html`, without manual post‑editing.
>
> The final report **must be production‑ready** – every placeholder replaced, no stray brackets, no citation tags (`[12]`) left, no missing data, no doubled sections, no broken CSS classes.

---

## 1. Accepted Inputs

|  Input                                      |  Description                                                                                                                |
| ------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------- |
| **RAW‑PART\[n].json**                       | Primary structured input.  Follows the schema in §4.                                                                        |
| **RAW‑PART\[n].html** *(optional)*          | Fallback when JSON unavailable.  Contains <section> blocks identical to JSON `sections`.                                    |
| **100x-daily-wrap-template.html**           | Visual skeleton with every placeholder wrapped in **square brackets** or `{{ token }}`.  **Never change structure or CSS.** |
| **Historical reference .html** *(optional)* | Previously generated wraps – useful only for style reference.                                                               |

> **Multiple RAW files**: load *all* in alphanumeric order, concatenate their `sections` arrays, then sort by the numeric prefix of `section.title` (e.g. `"7. Sector…"`).

---

## 2. Golden Rules

1. **Data Integrity**   Every data row, paragraph, bullet, and table contained in RAW **must appear exactly once** in the output.  *Zero* omissions or duplicates.
2. **Template Sanctity**   Never modify HTML structure, tags, classes, or Tailwind directives.  *Only* replace placeholder content.
3. **Zero Brackets**   Remove *all* bracketed citation marks (`[xx]`) and placeholder brackets (`[ ]`).  Replace tags like `[붕괴]` → **추세 이탈** (bolded with proper color).
4. **Natural Korean prose**   Re‑express RAW English sentences into professional Korean where possible.  Numbers, tickers, and technical terms stay English.
5. **Self‑Verification Loop**   After filling the template count *items‑in* vs *items‑out* (§8).  If mismatch, restart population until counts match.

---

## 3. High‑Level Workflow (Pseudo‑code)

```pseudo
load(template.html)
raw_chunks = concat(load_all(RAW_PART*))
map = build_section_index(raw_chunks)            # §4
for section in template:
    if section.placeholder exists:
        fill_section(section, map)               # §5‑§7
remove_all_citations()
validate_item_counts(raw_chunks, template)       # §8
save("100x-daily-wrap-YYYYMMDD.html")
```

---

## 4. RAW JSON Schema & Parsing

```json
{
  "metadata": { … },
  "sections": [
    {
      "title": "<N>. <Section Title>",          // required
      "content": [],                              // optional – paragraphs, tables, lists
      "subsections": [ … ]                        // optional
    }
  ],
  "references": [ {"id":"[22]", "title":"…"} … ]
}
```

* **Paragraph node**: `{ "type":"paragraph", "text":"…" }`
* **Table node**     : `{ "type":"table", "data":[ {"col1":"…"}, …] }`
* **Other types**    : treat as paragraph.

For *RAW‑HTML* fallback: parse `<section data-title="…">…</section>` blocks into the same structure.

---

## 5. Section‑Matching Algorithm

Match each RAW `section.title` (or `subtitle`) **numerically** to the template subsections:

|  RAW Prefix                          |  Template Target                         |
| ------------------------------------ | ---------------------------------------- |
|  1. Executive Summary                |  Header → Thesis & Key Drivers           |
|  2. Today’s Market Pulse             |  Section : Key Drivers / Intraday Pulse  |
|  3. Multi‑Asset Performance          |  Section (Indices grid + Heatmap)        |
|  4. Correlation & Volatility Matrix  |  Section for correlation table           |
|  5. Fresh Wall Street Intelligence   |  News / upgrades table                   |
|  6. Institutional Money Flows        |  Dark‑pool / options / ETF flow cards    |
|  7. Sector & Rotation Pulse          |  GICS sector table / thematic heatmap    |
|  8. Tech Leadership Pulse            |  Mega‑cap & AI leaderboard               |
|  9. Today’s Trade Signals            |  Signal cards                            |
|  10. Tomorrow’s Calendar             |  Earnings & macro calendar               |
|  11. Appendix                        |  Futures & key charts                    |

If template lacks a section **and** RAW has data ⇒ *do not* inject new markup – simply omit with log note.

---

## 6. Placeholder Binding Rules

* **Square‑Bracket Tokens** `[ … ]` → simple `{{token}}` replacement.
* **Comment markers** `<!-- [수정] … -->` → replace the *next* HTML node’s innerText/innerHTML.
* **Dynamic Tables** : clone the nearest `<tr>` sample row, repeat for each data row, then remove the original sample row.
* **Classes for value colors** : `text-green-600` if `value > 0`, `text-red-600` if `<0`, else `text-gray-600`.
* **Progress‑bar width** : `width: {{score*10}}%`.

---

## 7. Content Style & Transformation

1. **Bold‑color Mapping**

   |  Context             |  Class                              |
   | -------------------- | ----------------------------------- |
   |  General insight     |  `text-blue-600`                    |
   |  Large option flows  |  `text-purple-600`                  |
   |  ETF fund flows      |  `text-green-600`                   |
   |  Dark‑pool data      |  `text-blue-600`                    |
   |  AI/Tech insight     |  Choose green/red/gray dynamically  |
2. **Sentence Reconstruction**   Rewrite raw bullet points into smooth narrative; never copy‑paste entire English sentences.
3. **Tag Translation**   `[붕괴]`→**추세 이탈**, `[급등]`→**추세 강화**, both wrapped in `<b>`.
4. **Missing / N‑A**     Render as `<span class="na-value">-</span>`.

---

## 8. Self‑Verification

```pseudo
raw_count  = total_paragraphs + total_table_rows(raw_chunks)
html_count = total_paragraphs + total_table_rows(rendered_html)
assert raw_count == html_count, "Mismatch – rerun population"
```

Log successes or mismatches in `<!-- AGENT LOG: … -->` comments at bottom of HTML (will be stripped before publish).

---

## 9. Edge‑Cases & Fallbacks

* **Missing Subsection**   If a RAW `subsection` is missing, treat parent `section.content`.
* **HTML given instead of JSON**   Use DOM parsing to extract text, tables; follow same pipeline.
* **Unexpected Key Names**   When a table row has unfamiliar keys, render a two‑column `<tr><th>key</th><td>value</td></tr>` fallback.
* **Excess Template Placeholders**   Replace with `-` if no data.

---

## 10. Output File Naming

`100x-daily-wrap-<YYYYMMDD>.html` where date is derived from RAW `metadata.title` or first occurrence of `YYYYMMDD` in filename.

---

## 11. Example End‑to‑End Command (for reference)

```
agent.run(
  raw_paths  = ["20250709 100x Daily Wrap Part1.json", "20250709 100x Daily Wrap Part2.json"],
  template_path = "100x-daily-wrap-template.html"
)
```

---

**END OF AGENT.MD v3.0**
